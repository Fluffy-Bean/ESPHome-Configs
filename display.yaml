esphome:
  name: display
  friendly_name: Display
  comment: Display to show HA stats

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:

api:

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none

  ap:
    ssid: "Display Fallback Hotspot"
    password: "ChangeMe!"

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/London

sensor:
  - platform: homeassistant
    id: humidity_sensor
    entity_id: sensor.pico_scd41_scd41_humidity
    internal: true
  - platform: homeassistant
    id: temperature_sensor
    entity_id: sensor.pico_scd41_scd41_temperature
    internal: true

binary_sensor:
  - platform: gpio
    id: push_button
    pin:
      number: 18
      mode:
        input: true
        pullup: true
      inverted: true
    filters:
      - delayed_on: 20ms
      - delayed_off: 20ms
    on_press:
      then:
        - display.page.show_next: display_gwagwa

i2c:
  sda: 21
  scl: 22

font:
  - file:
      type: gfonts
      family: "Ubuntu Mono"
    id: font_gwagwa
    size: 11
    glyphs: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ 1234567890[].:|%°"

graph:
  - id: humidity_graph
    duration: 30min
    x_grid: 5min
    width: 128
    height: 50
    traces:
      - sensor: humidity_sensor
        line_type: SOLID
        continuous: true
        line_thickness: 1
  - id: temperature_graph
    duration: 30min
    x_grid: 5min
    width: 128
    height: 50
    traces:
      - sensor: temperature_sensor
        line_type: SOLID
        continuous: true
        line_thickness: 1

display:
  - platform: ssd1306_i2c
    id: display_gwagwa
    model: "SSD1306 128x64"
    address: 0x3C
    pages:
      - id: page_humidity
        lambda: |-
          it.strftime(0, 0, id(font_gwagwa), "[%H:%M]", id(homeassistant_time).now());
          it.printf(0, 0, id(font_gwagwa), "        Humi %.1f%%", id(humidity_sensor).state);
          // it.image(36, 1, id(icon_water_droplet));
          it.graph(0, 14, id(humidity_graph));
      - id: page_temperature
        lambda: |-
          it.strftime(0, 0, id(font_gwagwa), "[%H:%M]", id(homeassistant_time).now());
          it.printf(0, 0, id(font_gwagwa), "        Temp %.1f°C", id(temperature_sensor).state);
          // it.image(36, 1, id(icon_thermometer));
          it.graph(0, 14, id(temperature_graph));
